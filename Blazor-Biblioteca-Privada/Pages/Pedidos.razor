@page "/pedidos"
@inject HttpClient Http
@inject ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager

<div class="pedidos-container">
    <h2>Mis Pedidos</h2>
    @if (isLoading)
    {
        <div class="loading-message">
            <p><em>Cargando pedidos...</em></p>
        </div>
    }
    else if (pedidos == null || !pedidos.Any())
    {
        <div class="empty-message">
            <p><em>No tienes pedidos realizados.</em></p>
        </div>
    }
    else
    {
        <div class="pedidos-grid">
            @foreach (var pedido in pedidos)
            {
                <div class="pedido-card">
                    <div class="pedido-header">
                        <span class="pedido-fecha">@pedido.Fecha.ToString("dd/MM/yyyy HH:mm")</span>
                        <span class="pedido-total">$@pedido.Total.ToString("F2")</span>
                        <span class="pedido-estado">@pedido.Estado</span>
                    </div>
                    <div class="pedido-libros">
                        Libros: @pedido.Libros
                    </div>
                </div>
            }
        </div>
    }
    <button class="btn btn-secondary" @onclick="VolverAlCatalogo">Volver al Cat√°logo</button>
</div>

<style>
    .pedidos-container {
        padding: 20px;
        max-width: 900px;
        margin: 0 auto;
    }
    .pedidos-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }
    .pedido-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 20px;
        background: white;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .pedido-header {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
    }
    .pedido-fecha {
        color: #64748b;
        font-size: 0.95rem;
    }
    .pedido-total {
        font-weight: 600;
        color: #2563eb;
    }
    .pedido-estado {
        font-weight: 600;
        color: #059669;
    }
    .pedido-libros {
        color: #4b5563;
        font-size: 0.95rem;
        margin-top: 10px;
    }
    .btn.btn-secondary {
        background-color: #e2e8f0;
        color: #1e293b;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        border: none;
        font-weight: 500;
        cursor: pointer;
        transition: background-color 0.2s;
        text-decoration: none;
        margin-top: 20px;
    }
    .btn.btn-secondary:hover {
        background-color: #cbd5e1;
    }
</style>

@code {
    private List<PedidoModel> pedidos;
    private bool isLoading = true;

    private class PedidoModel
    {
        public int Id { get; set; }
        public string Libros { get; set; }
        public double Total { get; set; }
        public DateTime Fecha { get; set; }
        public string Estado { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        var userId = await LocalStorage.GetItemAsync<int>("userId");
        try
        {
            // Si tienes endpoint por usuario, usa: $"api/pedidos/cliente/{userId}"
            pedidos = await Http.GetFromJsonAsync<List<PedidoModel>>("api/pedidos/listar");
        }
        catch
        {
            pedidos = new List<PedidoModel>();
        }
        isLoading = false;
    }

    private void VolverAlCatalogo()
    {
        NavigationManager.NavigateTo("/libros");
    }
} 